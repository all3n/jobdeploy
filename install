#!/bin/bash
[[ $DEBUG == true  ]] && set -x



usage() {
  cat <<END
Usage:
  `basename $0` [help|--help|-h]
  `basename $0` [install_path]
  default <install_path>   = /opt/jobdeploy
Environments:
  DEBUG - if set to true, enable 'set -x'
After the script success, you need also:
  - sudo ln -sf {install_path}/deploy /usr/bin/deploy
END
}
die() {
  local err=$?
  (( err != 0 )) || err=1
  echo ERROR: "$@" >&2
  exit $err
}
die_with_usage() {
  usage >&2
  die "$@"
}
check_dep(){
  local cmd=$1
  command -v $cmd $ &>/dev/null || die "Can't find $cmd command!"
}
check_java(){
  check_dep java
  java_version=`java -version 2>&1 | awk -F '"' '/version/ {print $2}'`
  if [[ "$java_version" < "1.8" ]];then
    die "need java 1.8"
  fi
}

case $# in
    (0|1) ;;
    (*) die_with_usage "Invalid options." ;;
esac
case "$1" in
	(help|--help|-h) usage; exit 0 ;;
esac

check_java
check_dep mvn


INSTALL_PATH=$1
if [ -z $INSTALL_PATH ];then
    echo "install path not set,set default INSTALL_PATH=/opt/jobdeploy"
    INSTALL_PATH=/opt/jobdeploy
fi
REPO=https://github.com/all3n/jobdeploy.git

echo $INSTALL_PATH
if [ -z $INSTALL_PATH ];then
    echo "install path empty..."
    exit
fi
mkdir -p $INSTALL_PATH
echo "start build "
SRC_DIR="."
INSTALL_TEMP_DIR=`mktemp -d /tmp/jobdeploy.install.XXXXXX`
trap "rm -rf $INSTALL_TEMP_DIR" EXIT

if [ ! -d .git ];then
    SRC_DIR="$INSTALL_TEMP_DIR/jobdeploy"
    git clone $REPO $SRC_DIR
    pushd $SRC_DIR >/dev/null 2>&1
fi

echo "start build jobdeploy"
mvn -q clean
mvn package -DskipTests=true
echo "end build jobdeploy"

echo "rm -rf $INSTALL_PATH/*.jar"
rm -rf $INSTALL_PATH/*.jar

cp target/jobdeploy-0.0.1-SNAPSHOT.jar $INSTALL_PATH
echo "install jar to ${INSTALL_PATH}"

APP_CONF=$INSTALL_PATH/conf
mkdir -p $APP_CONF
APP_PLUGINS=$INSTALL_PATH/plugins
mkdir -p $APP_PLUGINS
APP_LOGS=$INSTALL_PATH/logs
mkdir -p $APP_LOGS
chmod 777 $APP_LOGS

JOBDEPLOY_GIT_REPO=`git config remote.origin.url`

cp ./src/main/resources/deploy_config_default.properties $APP_CONF/deploy_config.properties.template
cp ./src/main/resources/mail.properties $APP_CONF/mail.properties.template
cp ./conf/log4j.properties $APP_CONF/log4j.properties


TMP_FILE=`mktemp  /tmp/XXXXXXX`
sed "s#{deploypath}#${INSTALL_PATH}#" script/deploy > $TMP_FILE
sed "s#{JOBDEPLOY_GIT_REPO}#${JOBDEPLOY_GIT_REPO}#" $TMP_FILE > $INSTALL_PATH/deploy

chmod +x $INSTALL_PATH/deploy


echo "INSTALL SUCCESS!!"
echo "PLEASE ADD $INSTALL_PATH in the env PATH first time"
echo "OR sudo ln -sf $INSTALL_PATH/deploy /usr/bin/deploy"

rm $TMP_FILE
if [ ! -d .git ];then
    popd > /dev/null 2>&1
fi
